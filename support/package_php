#!/bin/bash

set -e

basedir="$( cd -P "$( dirname "$0" )" && pwd )"

source "$basedir/../conf/buildpack.conf"

if [ -z "$1" ]; then
    echo "Usage: $0 <version>" >&2
    exit 1
fi

php_version="$1"
php_redis_version="2.2.4"

if [ -z "$PHP_ZLIB_VERSION" ]; then
    PHP_ZLIB_VERSION=1.2.8
fi

echo "-----> Packaging PHP $php_version"

tempdir="$( mktemp -t php_xxxx )"
rm -rf $tempdir
mkdir -p $tempdir
cd $tempdir

echo "-----> Downloading dependency zlib ${zlib_version}"

curl -LO "http://$S3_BUCKET.s3.amazonaws.com/zlib/zlib-${PHP_ZLIB_VERSION}.tar.gz"
tar -xzvf "zlib-${PHP_ZLIB_VERSION}.tar.gz"

echo "-----> Downloading PHP $php_version"
curl -LO "http://php.net/distributions/php-${php_version}.tar.gz"
tar -xzvf "php-${php_version}.tar.gz"

echo "-----> Downloading php-redis $php_redis_version"
curl -L -o - "https://github.com/nicolasff/phpredis/archive/${php_redis_version}.tar.gz" > "phpredis-${php_redis_version}.tar.gz"
tar -xzvf "phpredis-${php_redis_version}.tar.gz"

# php_memcached_version=40ce9b4633de5d70f056e4d434d9b064263348d0

# echo "-----> Downloading php-memcached $php_memcached_version"
# curl -L -o - "https://github.com/andreiz/php-memcached/archive/${php_memcached_version}.tar.gz" > "phpmemcached-${php_memcached_version}.tar.gz"
# tar -xzvf "phpmemcached-${php_memcached_version}.tar.gz"

install_zend_optimizer=":"

if [[ "$php_version" =~ 5.5 ]]; then
    install_zend_optimizer=$(cat << SH
    echo "zend_extension=\$(/app/vendor/php/bin/php-config --extension-dir)/opcache.so" >> /app/vendor/php/etc/conf.d/opcache.ini
SH
)
else
    install_zend_optimizer=$(cat <<SH
    /app/vendor/php/bin/pecl install ZendOpcache-beta \
        && echo "zend_extension=\$(/app/vendor/php/bin/php-config --extension-dir)/opcache.so" >> /app/vendor/php/etc/conf.d/opcache.ini
SH
)
fi

build_command=$(cat <<BUILD_CMD
    mkdir -p "/app/vendor/php/zlib" \
    && mkdir -p "/app/vendor/php/etc/conf.d" \
    && cd zlib-${PHP_ZLIB_VERSION} && ./configure --prefix=/app/vendor/php/zlib && make && make install \
    && cd ../php-${php_version} && ./configure --prefix=/app/vendor/php \
    --with-config-file-path=/app/vendor/php/etc \
    --with-config-file-scan-dir=/app/vendor/php/etc/conf.d \
    --with-gd \
    --with-mysql \
    --with-mysqli \
    --with-pdo-mysql \
    --with-pdo-sqlite \
    --with-pdo-pgsql=/usr/bin/pg_config \
    --with-pgsql \
    --enable-shmop \
    --enable-zip \
    --with-jpeg-dir=/usr \
    --with-png-dir=/usr \
    --enable-exif \
    --with-zlib=/app/vendor/php/zlib \
    --with-bz2 \
    --with-openssl \
    --enable-soap \
    --enable-xmlreader \
    --with-xmlrpc \
    --with-curl=/usr \
    --with-xsl \
    --enable-fpm \
    --enable-mbstring \
    --enable-pcntl \
    --enable-sockets \
    --enable-bcmath \
    --with-readline \
    --disable-debug \
    && make \
    && make install \
    && /app/vendor/php/bin/pear config-set php_dir /app/vendor/php \
    && $install_zend_optimizer \
    && yes '' | /app/vendor/php/bin/pecl install apcu-beta \
    && echo "extension=apcu.so" > /app/vendor/php/etc/conf.d/apcu.ini \
    && /app/vendor/php/bin/pecl install mongo \
    && echo "extension=mongo.so" > /app/vendor/php/etc/conf.d/mongo.ini \
    && cd ../phpredis-${php_redis_version} && /app/vendor/php/bin/phpize && ./configure --with-php-config=/app/vendor/php/bin/php-config && make && make install \
    && echo "extension=redis.so" > /app/vendor/php/etc/conf.d/redis.ini
BUILD_CMD
)

echo "-----> Uploading source to build server"

vulcan build --verbose \
    --name php \
    --prefix /app/vendor/php \
    --source "." \
    --output "$tempdir/php-$php_version.tgz" \
    --command "$build_command"

echo "-----> Moving package to S3"

s3cmd put --verbose \
    --acl-public \
    "$tempdir/php-${php_version}.tgz" \
    "s3://$S3_BUCKET/package/php-${php_version}.tgz"

"$basedir/manifest" php

echo "-----> Done building PHP package!"
