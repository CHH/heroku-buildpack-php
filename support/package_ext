#!/usr/bin/env bash

set -e
set -o pipefail

if [ -z "$1" ]; then
    echo "Usage: package_ext EXT API..."
    exit 1
fi

indent() {
    c='s/^/       /'
    case $(uname) in
        Darwin) sed -l "$c";;
        *)      sed -u "$c";;
    esac
}

build_ext() {
    local ext_name="$1"
    local php_series="$2"
    local zend_api_version=${PHP_MODULE_API_VERSIONS["$php_series"]}

    tempdir="$( mktemp -t php${ext_name}_XXXX )"
    rm -rf $tempdir
    mkdir -p $tempdir
    cd $tempdir

    local php_version=$(\
        echo "$php_versions" \
        | grep "^${php_series}.*$" | sort -r -V | head -n1)

    echo "-----> Building $ext_name for PHP module API version ${zend_api_version} using PHP ${php_version}"

    local ext_dir="lib/php/extensions/no-debug-non-zts-${zend_api_version}"
    local s3_url="https://${S3_BUCKET}.s3.amazonaws.com/develop/${TARGET_STACK}"
    local php_package="${s3_url}/package/php-${php_version}.tgz"

    cp "$basedir/ext/${ext_name}" "$tempdir/build.sh"

    cd "$tempdir"

    # clean any previous state to be sure we don't include unwanted things
    rm -rf /app/vendor/php

    mkdir -p /app/vendor/php
    mkdir -p "/$tempdir/out/$ext_dir"
    mkdir -p "/$tempdir/out/etc/conf.d"

    curl -L "$php_package" | tar -xzv -C /app/vendor/php

    echo "-----> Compiling the extension"

    CONF_DIR="/$tempdir/out/etc/conf.d" EXT_DIR="/$tempdir/out/$ext_dir" S3_URL="$s3_url" ./build.sh

    echo "-----> Building the archive"

    pushd "/$tempdir/out/"

    tar czf "$tempdir/php-${ext_name}.tgz" *

    popd

    s3cmd put --verbose \
        --acl-public \
        "$tempdir/php-${ext_name}.tgz" \
        "s3://$S3_BUCKET/develop/$TARGET_STACK/package/ext/${zend_api_version}/php-${ext_name}.tgz"

    "$basedir/package-checksum" "ext/${zend_api_version}/php-${ext_name}"
}

basedir="$( cd -P "$( dirname "$0" )" && pwd )"
source "$basedir/../conf/buildpack.conf"

export PATH=${basedir}/../vendor/bin:$PATH

if [ -z "$S3_BUCKET" ]; then
    echo "Must set S3_BUCKET environment variable" >&2
    exit 1
fi

if [ -z "$TARGET_STACK" ]; then
    echo "TARGET_STACK must be set" >&2
    exit 1
fi

php_versions=$(curl --silent "https://${S3_BUCKET}.s3.amazonaws.com/develop/${TARGET_STACK}/manifest.php")

ext_name="$1"
shift
php_api="$@"

if [ ! -f "$basedir/ext/$ext_name" ]; then
    echo "No build manifest found for '$ext_name'" >&2
    exit 1
fi

echo "-----> Building $ext_name for PHP versions [$php_api]"

for api in $php_api; do
    build_ext "$ext_name" "$api"
done
